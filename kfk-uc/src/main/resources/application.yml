server:
  port: 8089

spring:
  application:
    name: kfk-uc-logging
  kafka:
    consumer:
      client-id: ${spring.application.name} # 唯一客户端 Id
      bootstrap-servers: localhost:9092
      group-id: metric-logging-group
      auto-offset-reset: earliest
      enable-auto-commit: true
      auto-commit-interval: 100
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      batch-size: 5000000
    properties: # 在项目启动的时候可以在控制台看到生效的配置，可配置的属性可以在这里 https://kafka.apache.org/documentation/#configuration 看到
      linger-ms: 0 # 消息到 sender 缓冲区后等待多久发送？
      max-request-size: 10485760 # 单位 B

management:
  server:
    port: 9091 # 访问 http://localhost:9091/actuator/prometheus
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    tags:
      application: ${spring.application.name}

rocketmq:
  name-server: localhost:9876
  endpoints: localhost:8081
  consumer:
    group: rmq-uc-consumer
    pull-batch-size: 30
    topic: prometheus-metric
  producer:
    group: rmq-uc-prod
    send-message-timeout: 300000